이미지 분류 머신러닝 프로젝트

내일이면 프로젝트 마무리다 같은 팀원들과 벌써 호흡이 잘 맞고 정도 많이 들었는데
내일이 되면 또 다른팀으로 흩어진다

내가 맡은 파트는 딥러닝 파트였다
스파르타 코딩클럽에서 배운 여러가지 기법을 활용하니 정확도가 꽤 높게 나왔다

일단 팀원들과 다 같이 데이터셋을 수집하고 만들었는데 아무래도 무작위로 뽑아온 데이터라 에러가 자주 발생하였다
그 전에 올린 TIL에도 있는 내용이지만 다시 한번 짚어보자면 필요없는 파일을 걸러내면서 byte값이 0바이트인 파일과 또 읽을 수 없는 파일을 
잘 걸러내줘야 컴퓨터가 좋아한다 그렇지 않으면 오류를 돌려준다..

이미지 정렬을 위해 사용 했던 Batch namer이라는 프로그램에서 이름만 바꿀땐 못봤는데 꼭 필요할 때 나타나줘서 고맙게도 파일크기를 보는 칸이 있엇다
0바이트가 있을 거라 확신했는데 보이지않아서 제일 낮은 파일들은 일일이 다 확인했다 아니나 다를까 디스크 할당크기가 0byte인 파일이 있었고
그 파일은 제거해주었다 그리고 읽을 수 없는 파일은 간단한 반복문을 통해서 찾을 수 있었다
import PIL
from pathlib import Path   ## 읽을 수 없는 파일을 찾아서 알려주는 반복문 입니다

path = Path(".").rglob("*.jpg")

for img_p in path:
  try:
    img = PIL.Image.open(img_p)
  except PIL.UnidentifiedImageError:
    print(img_p)        참 고마운 친구였다

간단하게 이미지 분류 모델 구성을 보면

일단 저희 팀원분이 직접 업로드 해주신 kaggle 데이터를 받아오고 unzip을 해준 후
다양한 라이브러리들을 import해주고 음 기억에 남는건
당연히 Model 을 가져오고
Input Dense Conv2D MaxPooling2D Flatten DropOut
Adam pandas numpy정도 있었고

이미지 증강부분은

일단 학습셋은 일반화 회전 확대 수평,수직 이동 뒤집기 등을 사용하였다
test셋은 일반화만 진행해 주었고

일단 color mode라는 것도 사용했다 rgb나 rgba를 넣으면 된다고 하는데 어떤 용도인지는 더 알아봐야겠다
그리고 flow_from_directory라는 것을 사용하면 폴더 경로만 주면 알아서 class별로 분류도 해준다
다항분류라 categorical_crossentropy를 사용해 주었고 정확도를 높이기 위해
이미지증강, dropout 그리고 여러가지 전이학습을 사용해 보았는데
ResNet50 보다는 inception_v3가 더 높게 나왔다

그리고 audio태그를 이용해 메인페이지에 오박사님의 bgm을 추가해주었다 yotube에 재밋어 보이는 js를 활용한 예시가 있길래
js를 활용해 매트릭스 하면 떠오르는 비가 내리는듯한 효과를 첫 index.html에 추가를 해주었다 다 이해하지 못했어도 무언가를 만들었다는 것에
정말 재미를 느꼇고 보람찬 하루였다

